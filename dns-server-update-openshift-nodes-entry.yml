---
- hosts: all
  gather_facts: false
  vars:
    vm_hostname: "{{ vm_host_name }}"
    vm_ipaddress: "{{ vm_ip_address }}"
    return_content: true
  tasks:
  - name: Ansible check if {{ user_data_file }} exists.
    stat:
      path: "{{ user_data_file }}"
    register: file_details
  - debug:
      msg: "The {{ user_data_file }} exists"
    when: file_details.stat.exists
  - name: Retreving DNS Key
    shell: |
      cat "{{ user_data_file }}"  | grep secret  | awk '{print $2}' | sed 's/"//g' | sed 's/;//g'
    register: user_data_action
    when: file_details.stat.exists
  - name: Debug
    debug: msg="the value of {{ user_data_file }} is {{ user_data_action.stdout }}"
    when: file_details.stat.exists
  - name: collect the response of userdata key
    set_fact:
      vault_dns_key: "{{ user_data_action.stdout }}"
    when: file_details.stat.exists
  - debug: msg="CHECK VALUES {{ vm_hostname }} A to {{ vm_ipaddress[0] }}"
  - name: Add or modify {{ vm_hostname }} A to {{ vm_ipaddress[0] }}
    nsupdate:
      key_name: "{{ dns_key_name }}"
      key_secret: "{{ vault_dns_key }}"
      server: "{{ dns_server_ip }}"
      zone: "{{ dns_zone }}"
      record: "{{ vm_host_name }}"
      value: "{{ vm_ipaddress[0] }}"